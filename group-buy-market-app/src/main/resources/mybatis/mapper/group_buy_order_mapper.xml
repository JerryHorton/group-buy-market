<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cug.sxy.infrastructure.persistent.dao.IGroupBuyOrderDao">

    <resultMap id="dataMap" type="cn.cug.sxy.infrastructure.persistent.dao.po.GroupBuyOrder">
        <id column="id" property="id"/>
        <result column="team_id" property="teamId"/>
        <result column="activity_id" property="activityId"/>
        <result column="goods_id" property="goodsId"/>
        <result column="source" property="source"/>
        <result column="channel" property="channel"/>
        <result column="original_price" property="originalPrice"/>
        <result column="discount_deduction" property="discountDeduction"/>
        <result column="pay_price" property="payPrice"/>
        <result column="target_count" property="targetCount"/>
        <result column="complete_count" property="completeCount"/>
        <result column="lock_count" property="lockCount"/>
        <result column="status" property="status"/>
        <result column="valid_start_time" property="validStartTime"/>
        <result column="valid_end_time" property="validEndTime"/>
        <result column="notify_type" property="notifyType"/>
        <result column="notify_target" property="notifyTarget"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="queryGroupBuyOrderByTeamId" parameterType="java.lang.String" resultMap="dataMap">
        select team_id,
               activity_id,
               goods_id,
               source,
               channel,
               original_price,
               discount_deduction,
               pay_price,
               target_count,
               complete_count,
               lock_count,
               status,
               valid_start_time,
               valid_end_time,
               notify_type,
               notify_target
        from group_buy_order
        where team_id = #{teamId}
    </select>

    <select id="queryOngoingGroupBuyOrderByTeamIds" parameterType="java.util.List" resultMap="dataMap">
        select team_id,
        activity_id,
        goods_id,
        source,
        channel,
        original_price,
        discount_deduction,
        pay_price,
        target_count,
        complete_count,
        lock_count,
        status,
        valid_start_time,
        valid_end_time,
        notify_type,
        notify_target
        from group_buy_order
        where status = 0
        <if test="teamIds != null and teamIds.size() > 0">
            and team_id in
            <foreach item="teamId" collection="teamIds" open="(" separator="," close=")">
                #{teamId}
            </foreach>
        </if>
        <![CDATA[
        and target_count > lock_count
        ]]>
    </select>

    <select id="queryCurrentGroupBuyTeams" parameterType="cn.cug.sxy.infrastructure.persistent.dao.po.GroupBuyOrder"
            resultMap="dataMap">
        select team_id,
               goods_id,
               activity_id,
               source,
               channel,
               original_price,
               discount_deduction,
               pay_price,
               target_count,
               complete_count,
               lock_count,
               status,
               valid_start_time,
               valid_end_time,
               notify_type,
               notify_target
        from group_buy_order
        where source = #{source}
          and channel = #{channel}
          and goods_id = #{goodsId}
    </select>

    <select id="queryTeamCompletedCount" parameterType="java.util.List" resultType="java.lang.Integer">
        select count(id)
        from group_buy_order
        where status = 1
        and team_id in
        <foreach item="teamId" collection="teamIds" open="(" separator="," close=")">
            #{teamId}
        </foreach>
    </select>

    <select id="queryTotalTeamUserCount" parameterType="java.util.List" resultType="java.lang.Integer">
        select sum(lock_count)
        from group_buy_order
        where team_id in
        <foreach item="teamId" collection="teamIds" open="(" separator="," close=")">
            #{teamId}
        </foreach>
    </select>

    <insert id="insertGroupBuyOrder" parameterType="cn.cug.sxy.infrastructure.persistent.dao.po.GroupBuyOrder">
        insert into group_buy_order(team_id, activity_id, goods_id, source, channel, original_price,
                                    discount_deduction, pay_price, target_count, complete_count, lock_count, status,
                                    valid_start_time, valid_end_time, notify_type, notify_target, create_time,
                                    update_time)
        values (#{teamId}, #{activityId}, #{goodsId}, #{source}, #{channel}, #{originalPrice},
                #{discountDeduction}, #{payPrice}, #{targetCount}, #{completeCount}, #{lockCount}, 0, #{validStartTime},
                #{validEndTime}, #{notifyType}, #{notifyTarget}, now(), now())
    </insert>

    <update id="updateAddLockCount" parameterType="java.lang.String">
        <![CDATA[
        update group_buy_order
        set lock_count = lock_count + 1
        where team_id = #{teamId}
          and lock_count < target_count
        ]]>
    </update>

    <update id="updateAddCompleteCount" parameterType="java.lang.String">
        <![CDATA[
        update group_buy_order
        set complete_count = complete_count + 1
        where team_id = #{teamId}
          and complete_count < lock_count
        ]]>
    </update>

    <update id="updateGroupBuyOrderStatus" parameterType="cn.cug.sxy.infrastructure.persistent.dao.po.GroupBuyOrder">
        update group_buy_order
        set status = #{status}
        where team_id = #{teamId}
    </update>

</mapper>
