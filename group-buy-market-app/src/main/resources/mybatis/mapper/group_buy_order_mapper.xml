<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cug.sxy.infrastructure.persistent.dao.IGroupBuyOrderDao">

    <resultMap id="dataMap" type="cn.cug.sxy.infrastructure.persistent.dao.po.GroupBuyOrder">
        <id column="id" property="id"/>
        <result column="team_id" property="teamId"/>
        <result column="activity_id" property="activityId"/>
        <result column="source" property="source"/>
        <result column="channel" property="channel"/>
        <result column="original_price" property="originalPrice"/>
        <result column="discount_deduction" property="discountDeduction"/>
        <result column="pay_price" property="payPrice"/>
        <result column="target_count" property="targetCount"/>
        <result column="complete_count" property="completeCount"/>
        <result column="lock_count" property="lockCount"/>
        <result column="status" property="status"/>
        <result column="valid_start_time" property="validStartTime"/>
        <result column="valid_end_time" property="validEndTime"/>
        <result column="notify_url" property="notifyUrl"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="queryGroupBuyOrderByTeamId" parameterType="java.lang.String" resultMap="dataMap">
        select team_id,
               activity_id,
               source,
               channel,
               original_price,
               discount_deduction,
               pay_price,
               target_count,
               complete_count,
               lock_count,
               status,
               valid_start_time,
               valid_end_time,
               notify_url
        from group_buy_order
        where team_id = #{teamId}
    </select>

    <insert id="insertGroupBuyOrder" parameterType="cn.cug.sxy.infrastructure.persistent.dao.po.GroupBuyOrder">
        insert into group_buy_order(team_id, activity_id, source, channel, original_price,
                                    discount_deduction, pay_price, target_count, complete_count, lock_count, status,
                                    valid_start_time, valid_end_time, notify_url, create_time, update_time)
        values (#{teamId}, #{activityId}, #{source}, #{channel}, #{originalPrice},
                #{discountDeduction}, #{payPrice}, #{targetCount}, #{completeCount}, #{lockCount}, 0, #{validStartTime},
                #{validEndTime}, #{notifyUrl}, now(), now())
    </insert>

    <update id="updateAddLockCount" parameterType="java.lang.String">
        <![CDATA[
        update group_buy_order
        set lock_count = lock_count + 1
        where team_id = #{teamId}
          and lock_count < target_count
        ]]>
    </update>

    <update id="updateAddCompleteCount" parameterType="java.lang.String">
        <![CDATA[
        update group_buy_order
        set complete_count = complete_count + 1
        where team_id = #{teamId}
          and complete_count < lock_count
        ]]>
    </update>

    <update id="updateGroupBuyOrderStatus" parameterType="cn.cug.sxy.infrastructure.persistent.dao.po.GroupBuyOrder">
        update group_buy_order
        set status = #{status}
        where team_id = #{teamId}
    </update>

</mapper>
